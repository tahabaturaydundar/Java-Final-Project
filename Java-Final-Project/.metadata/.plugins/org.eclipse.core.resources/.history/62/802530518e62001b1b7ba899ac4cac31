package paket;

import java.net.URL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.time.LocalDate;
import java.util.ResourceBundle;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Spinner;
import javafx.scene.control.SpinnerValueFactory;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.cell.PropertyValueFactory;

public class KontrolcuUygulama1 implements Initializable {

    @FXML
    private TextField txtAdý;

    @FXML
    private TextField txtSoyadý;

    @FXML
    private DatePicker dpTarih;

    @FXML
    private Spinner<Double> spnMaaþ;

    @FXML
    private ComboBox<String> cmbCinsiyet;

    @FXML
    private ComboBox<String> cmbDepartman;

    @FXML
    private TableView<Personel> tblPersonel;

    @FXML
    private TableColumn<Personel, String> sütunAdý;

    @FXML
    private TableColumn<Personel, String> sütunSoyadý;

    @FXML
    private TableColumn<Personel, LocalDate> sütunTarih;

    @FXML
    private TableColumn<Personel, Double> sütunMaaþ;

    @FXML
    private TableColumn<Personel, String> sütunCinsiyet;

    @FXML
    private TableColumn<Personel, String> sütunDeparman;
    
    private ObservableList<Personel> personeller = FXCollections.observableArrayList();
    private Connection baðlantý;
    private PreparedStatement sorgu;
    
    private Alert hatamesaji = new Alert(AlertType.ERROR);
    private Alert bilgimesaji = new Alert(AlertType.INFORMATION);
    

    @FXML
    void personelEkle(ActionEvent event) {
    	
    	LocalDate a = LocalDate.of(2002, 01, 01);
    	LocalDate b = LocalDate.now();
    	
    	String ad = txtAdý.getText();
    	String soyad = txtSoyadý.getText();
    	LocalDate tarih = dpTarih.getValue();
    	if (tarih.isAfter(a)) {
			hatamesaji.setTitle("Hata");
		    hatamesaji.setHeaderText("Personel 18 yaþýndan küçük olduðu için kayýt olamaz!");
    	    hatamesaji.show();
    	    return;
    	}
    	double maaþ = spnMaaþ.getValue();
    	String cinsiyet = cmbCinsiyet.getValue();
    	String departman = cmbDepartman.getValue();

    	Personel personel = new Personel(ad, soyad, cinsiyet, departman, maaþ, tarih);
    	personeller.add(personel);
    	
    	// Buradan sonrasýnda veritabaný iþlemi gerçekleþtireceðiz ! 
    }

    @FXML
    void personelGüncelle(ActionEvent event) {

    }

    @FXML
    void personelSil(ActionEvent event) {

    }

	@Override
	public void initialize(URL location, ResourceBundle resources) {
		// Baþlangýçta çalýþan methodtur! 
		
		spnMaaþ.setValueFactory(new SpinnerValueFactory.DoubleSpinnerValueFactory(2200, 15000, 2850, 100.0));		
		// Cinsiyet Atama Ýþlemleri
		cmbCinsiyet.getItems().add("Erkek");
		cmbCinsiyet.getItems().add("Kadýn");
		// Departman Atama Ýþlemleri ! 
		cmbDepartman.getItems().add("Pazarlama");
		cmbDepartman.getItems().add("Satýþ");
		cmbDepartman.getItems().add("Ýnsan Kaynaklarý");
		cmbDepartman.getItems().add("Bilgi Ýþlem");
		
		dpTarih.setValue(LocalDate.of(2001, 01, 01)); // important ! 
		
		sütunAdý.setCellValueFactory(new PropertyValueFactory<>("ad"));
		sütunSoyadý.setCellValueFactory(new PropertyValueFactory<>("soyad"));
		sütunTarih.setCellValueFactory(new PropertyValueFactory<>("tarih"));
		sütunMaaþ.setCellValueFactory(new PropertyValueFactory<>("maaþ"));
		sütunCinsiyet.setCellValueFactory(new PropertyValueFactory<>("cinsiyet"));
		sütunDeparman.setCellValueFactory(new PropertyValueFactory<>("departman"));
		
		tblPersonel.setItems(personeller);
		
		// Buradan sonra veri tabanýna baðlamak için driver tanýmlýyoruz ! 
		
		
		
	}

}
